# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE.txt)
#
# Copyright RenÃ© Ferdinand Rivera Morell 2020-2021.

name: 'Multiarch Linux (QEMU)'

on:
  push:
    branches: ["main", "release"]
    paths-ignore:
      [
        ".circleci/**",
        ".cirrus.yml",
        ".drone.star",
        ".semaphore/**",
        ".travis.yml",
        "appveyor.yml",
        "azure-pipelines.yml",
        ".ci/azp-*.yml",
        ".github/workflows/installer_*.yml",
      ]

jobs:
  qemu-multiarch-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {
              name: "Debian Sid (x32)",
              image: "lv2plugin/debian-x32",
              cxx: "g++",
              toolset: "gcc",
              packages: "dash build-essential",
            }
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    env:
      CXX: ${{ matrix.cxx }}
      CXXFLAGS: ${{ matrix.cxxflags }}
      PACKAGES: ${{ matrix.packages }}
      LLVM_OS: ${{ matrix.llvm_os }}
      LLVM_VER: ${{ matrix.llvm_ver }}
      TOOLSET: ${{ matrix.toolset }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@master
      - name: "Install"
        run: |
          sudo apt-get -o Acquire::Retries=3 update
          sudo apt-get -o Acquire::Retries=3 -y install qemu-user-static
          docker pull "${{ matrix.image }}"
      - name: "Info"
        run: |
          echo ">>>>>  WORKDIR: ${{ github.workspace }}"
          ls -laF ${{ github.workspace }}
      - name: "Run"
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.image }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} -w ${{ github.workspace }} --env-file $GITHUB_ENV
          run: |
            set -e
            uname -a
            echo "::group::ENV"
              env
            echo "::endgroup::"
            echo ">>>>>"
            echo ">>>>> Install.."
            echo ">>>>>"
            ./.ci/linux-cxx-install.sh
            echo ">>>>>"
            echo ">>>>> Build.."
            echo ">>>>>"
            cd src/engine
            export "PATH=${PATH};${CXX_PATH}"
            ./build.sh ${TOOLSET}
            ./b2 -v
            cd ../..
            echo ">>>>>"
            echo ">>>>> Test.."
            echo ">>>>>"
            cd test
            python3 test_all.py ${TOOLSET}
            cd ..
